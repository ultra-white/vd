services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_STRAPI_TOKEN: ${NEXT_PUBLIC_STRAPI_TOKEN}
      NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL}
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    restart: always
    ports:
      - 3000:3000
    networks:
      - ventodoro-dev

  database:
    image: postgres:17.4
    container_name: database
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./backend/psql/data:/var/lib/postgresql/data
    restart: always
    networks:
      - ventodoro-dev

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - 1337:1337
    depends_on:
      - database
    networks:
      - ventodoro-dev
    restart: always

networks:
  ventodoro-dev:
    driver: bridge

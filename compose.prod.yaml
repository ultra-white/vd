services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: prod.Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    restart: always
    ports:
      - 3000:3000
    networks:
      - ventodoro

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: prod.Dockerfile
      args:
        DATABASE_CLIENT: ${DATABASE_CLIENT}
        DATABASE_HOST: ${DATABASE_HOST}
        DATABASE_PORT: ${DATABASE_PORT}
        DATABASE_NAME: ${DATABASE_NAME}
        DATABASE_USERNAME: ${DATABASE_USERNAME}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        NODE_ENV: production
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: production
    depends_on:
      - database
    restart: always
    networks:
      - ventodoro

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - certbot
    volumes:
      - ./nginx/ventodoro.conf:/etc/nginx/conf.d/ventodoro.conf
      - ./nginx/admin.ventodoro.conf:/etc/nginx/conf.d/admin.ventodoro.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - ventodoro

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM;
             while :; do
               certbot renew --webroot -w /var/www/certbot --quiet;
               sleep 12h;
             done"
    restart: always
    networks:
      - ventodoro

  database:
    image: postgres:17.4
    shm_size: 1gb
    container_name: database
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd
    secrets:
      - postgres-passwd
    networks:
      - ventodoro
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./backend/psql/data:/var/lib/postgresql/data
    restart: always

networks:
  ventodoro:
    driver: bridge

secrets:
  postgres-passwd:
    environment: DATABASE_PASSWORD
